buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
        lombokVersion = '1.18.4'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

group = 'hmd'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

test {
	ignoreFailures = true
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	//compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
	//compile('com.zaxxer:HikariCP')
	//compile('org.springframework.boot:spring-boot-starter-thymeleaf')

	runtime('org.springframework.boot:spring-boot-devtools')
	//runtime('org.postgresql:postgresql')

	annotationProcessor("org.projectlombok:lombok:$lombokVersion")
	compileOnly("org.projectlombok:lombok:$lombokVersion")

	testCompile('org.springframework.boot:spring-boot-starter-test')

	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
}

task cleanResource {
    delete 'src/main/resources/templates', 'src/main/resources/static'
}

task resourceCopy {
    doLast {
        println "Copy resources..."
        // copy template
        copy {
            from 'src/main/webapp/index.html'
            into 'src/main/resources/templates'
        }

        // copy static
        copy {
            from('src/main/webapp') {
                include "css/**","externlib/**", "images/**", "js/**"
            }
            into 'src/main/resources/static'
        }
    }
}

processResources {
    dependsOn resourceCopy
}

clean {
    dependsOn cleanResource
}